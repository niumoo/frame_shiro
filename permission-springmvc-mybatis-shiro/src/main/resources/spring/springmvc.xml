<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 扫描组件controller注解，多个包使用半角逗号分隔 -->
	<context:component-scan base-package="net.codingme.ssm.controller" />
	
	<!-- 开启aop，对类代理 -->
	<aop:config proxy-target-class="true"></aop:config>
	<!-- 开启shiro注解支持 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 自动加载的注解处理器映射器和处理器适配器,  可以代替上面的处理器映射器和处理器适配器 ,conversion-service：配置自定义绑定,
	validator：配置校验器，校验器注入到适配器当中-->
	<!-- <mvc:annotation-driven conversion-service="conversionService" validator="validatorBean" /> -->
	<mvc:annotation-driven  />
	
	<!-- 定义静态资源 -->
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/styles/**" location="/styles/" />
	
	<!-- JSP视图解析器 ，默认使用JSTL，要添加jstl包-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
		<!-- 配置路径前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 配置路径后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	
	
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->	
		<property name="converters">
			<list>
				<!-- 日期类型转换 -->
				<bean class="net.codingme.ssm.controller.converter.CustomDateConverter"></bean>
			</list>
		</property>
	</bean>
	
	<!-- 校验器 -->
	<bean id="validatorBean"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 校验器 -->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名 -->
		<property name="basenames">
			<list>
				<value>classpath:CustomValidationMessages</value>
			</list>
		</property>
		<!-- 资源文件编码格式 -->
		<property name="fileEncodings" value="utf-8" />
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>
	
	<!-- 全局异常处理器 -->
	<bean class="net.codingme.ssm.exception.CustomExceptionResolver" />

	<!-- 文件上传解析 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为1MB(1byte*1024*104) -->
		<property name="maxUploadSize">
			<value>1048576</value>
		</property>
	</bean>

	<!-- 全局拦截器 -->
	<!-- 拦截器 -->
	<!-- <mvc:interceptors>
		多个拦截器，顺序执行
		用户认证拦截器
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="net.codingme.ssm.controller.interceptor.LoginInterceptor" />
		</mvc:interceptor>
		用户授权拦截器
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="net.codingme.ssm.controller.interceptor.PermissionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	
</beans>